[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "zorix-agent"
version = "0.1.0"
description = "AI-powered coding assistant backend using AWS Bedrock"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Zorix Team", email = "team@zorix.dev"},
]
keywords = ["ai", "coding-assistant", "aws-bedrock", "fastapi"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "fastapi==0.104.1",
    "uvicorn[standard]==0.24.0",
    "boto3==1.34.0",
    "botocore==1.34.0",
    "faiss-cpu==1.7.4",
    "numpy==1.24.3",
    "pydantic==2.5.0",
    "pydantic-settings==2.1.0",
    "sqlalchemy==2.0.23",
    "aiosqlite==0.19.0",
    "httpx==0.25.2",
    "aiofiles==23.2.1",
    "tree-sitter==0.20.4",
    "tree-sitter-python==0.20.4",
    "tree-sitter-javascript==0.20.3",
    "tree-sitter-typescript==0.20.5",
    "GitPython==3.1.40",
    "opentelemetry-api==1.21.0",
    "opentelemetry-sdk==1.21.0",
    "opentelemetry-exporter-otlp==1.21.0",
    "structlog==23.2.0",
    "click==8.1.7",
    "rich==13.7.0",
    "typer==0.9.0",
    "cryptography==41.0.8",
    "python-dotenv==1.0.0",
    "pathspec==0.11.2",
    "chardet==5.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "pytest-mock==3.12.0",
    "ruff==0.1.6",
    "black==23.11.0",
    "mypy==1.7.1",
]

[project.scripts]
zorix = "cli.zorix_cli:main"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "faiss.*",
    "tree_sitter.*",
    "git.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]